{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OOAD_PROJ\\\\frontend\\\\src\\\\samplelist.js\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport api from './api';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nvar api1 = axios.create({\n  baseURL: \"http://localhost:3001/api\"\n});\n\nclass samplelist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      axios({\n        method: \"get\",\n        url: \"http://localhost:3001/api/flight\",\n        withCredentials: true,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(response => {\n        if (response && response.data) {\n          this.setState({\n            travel_list: response.data\n          });\n        }\n      }).catch(error => console.log(error.response.data));\n    };\n\n    this.state = {\n      travel_list: [],\n      columns: [],\n      isloading: false\n    };\n  }\n  /*componentDidMount=  ()=>{\r\n      console.log(\"Data\")\r\n      console.log(api1.get('/flight'))\r\n  }*/\n\n  /*componentDidMount = async() =>{\r\n      let apiRes = null;\r\n      try{\r\n          apiRes = await axios.get('http://localhost:3001/api/flight')\r\n          console.log(apiRes)\r\n      }\r\n      catch(err){\r\n          console.log(err.response)\r\n      }\r\n  }*/\n\n\n  /*componentDidMount = async() =>{\r\n      fetch(\"http://localhost:3001/api/flight\")\r\n      .then(response=>response.json())\r\n      .then(json=>{\r\n          console.log(\"Data\")\r\n          console.log(json)\r\n      })\r\n      this.setState({isloading:true})\r\n    */\n\n  /*await api.getflight().then(flights=>{\r\n      this.setState({\r\n          travel_list:flights.data.data,\r\n          isloading:false,\r\n      })\r\n  })\r\n  }*/\n\n  /*componentDidMount = ()=>{\r\n      const{endpoint} = this.state\r\n      const socket = socketIOClient(endpoint)\r\n      socket.on(\"FromAPI\", data => this.setState({ response: data }));\r\n  }\r\n  getflights = () =>{\r\n      axios.get(\"http://localhost:3001/api/flight\")\r\n      .then((response)=>{\r\n        const data = response.data;\r\n        this.setState({posts:data});\r\n  \r\n        console.log(\"Data received\");\r\n      })\r\n      .catch(()=>{\r\n        alert(\"error retrieving data\");\r\n      })\r\n  */\n  render() {\n    const {\n      travel_list,\n      isloading\n    } = this.state;\n    const columns = [{\n      Header: 'ID',\n      accessor: '_id',\n      filterable: true\n    }, {\n      Header: 'Source',\n      accessor: 'sr',\n      filterable: true\n    }, {\n      Header: 'Dest',\n      accessor: 'dt',\n      filterable: true\n    }, {\n      Header: 'Travel-Time',\n      accessor: 'time',\n      Cell: props => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, props.value.join(' / '))\n    }];\n    let showTable = true;\n\n    if (!travel_list.length) {\n      showTable = false;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, showTable && React.createElement(ReactTable, {\n      data: travel_list,\n      columns: columns,\n      loading: isloading,\n      defaultPageSize: 10,\n      showPageSizeOptions: true,\n      minRows: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default samplelist;","map":{"version":3,"sources":["C:/Users/DELL/OOAD_PROJ/frontend/src/samplelist.js"],"names":["React","Component","ReactTable","api","axios","socketIOClient","api1","create","baseURL","samplelist","constructor","props","componentDidMount","method","url","withCredentials","headers","Accept","then","response","data","setState","travel_list","catch","error","console","log","state","columns","isloading","render","Header","accessor","filterable","Cell","value","join","showTable","length"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,IAAIC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAa;AACpBC,EAAAA,OAAO,EAAC;AADY,CAAb,CAAX;;AAGA,MAAMC,UAAN,SAAyBR,SAAzB,CAAkC;AAC9BS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAuBlBC,iBAvBkB,GAuBE,MAAI;AACpBR,MAAAA,KAAK,CAAC;AACFS,QAAAA,MAAM,EAAC,KADL;AAEFC,QAAAA,GAAG,EAAC,kCAFF;AAGFC,QAAAA,eAAe,EAAC,IAHd;AAIFC,QAAAA,OAAO,EAAE;AACL,yCAA+B,GAD1B;AAEL,0BAAgB,kBAFX;AAGLC,UAAAA,MAAM,EAAE;AAHH;AAJP,OAAD,CAAL,CAUCC,IAVD,CAUMC,QAAQ,IAAE;AACZ,YAAGA,QAAQ,IAAIA,QAAQ,CAACC,IAAxB,EAA6B;AACzB,eAAKC,QAAL,CAAc;AAACC,YAAAA,WAAW,EAACH,QAAQ,CAACC;AAAtB,WAAd;AACH;AACJ,OAdD,EAeCG,KAfD,CAeOC,KAAK,IAAEC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACL,QAAN,CAAeC,IAA3B,CAfd;AAgBH,KAxCiB;;AAEd,SAAKO,KAAL,GAAa;AACTL,MAAAA,WAAW,EAAC,EADH;AAETM,MAAAA,OAAO,EAAC,EAFC;AAGTC,MAAAA,SAAS,EAAC;AAHD,KAAb;AAKH;AAED;;;;;AAIA;;;;;;;;;;;;AA4BA;;;;;;;;;;AAUI;;;;;;;;AAOJ;;;;;;;;;;;;;;;;;AAkBAC,EAAAA,MAAM,GAAE;AACJ,UAAK;AAACR,MAAAA,WAAD;AAAaO,MAAAA;AAAb,QAA0B,KAAKF,KAApC;AACA,UAAMC,OAAO,GAAG,CACZ;AACIG,MAAAA,MAAM,EAAE,IADZ;AAEIC,MAAAA,QAAQ,EAAE,KAFd;AAGIC,MAAAA,UAAU,EAAE;AAHhB,KADY,EAMZ;AACIF,MAAAA,MAAM,EAAE,QADZ;AAEIC,MAAAA,QAAQ,EAAE,IAFd;AAGIC,MAAAA,UAAU,EAAE;AAHhB,KANY,EAWZ;AACIF,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,QAAQ,EAAE,IAFd;AAGIC,MAAAA,UAAU,EAAE;AAHhB,KAXY,EAgBZ;AACIF,MAAAA,MAAM,EAAE,aADZ;AAEIC,MAAAA,QAAQ,EAAE,MAFd;AAGIE,MAAAA,IAAI,EAAEvB,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,KAAK,CAACwB,KAAN,CAAYC,IAAZ,CAAiB,KAAjB,CAAP;AAHnB,KAhBY,CAAhB;AAuBA,QAAIC,SAAS,GAAG,IAAhB;;AACA,QAAI,CAACf,WAAW,CAACgB,MAAjB,EAAyB;AACrBD,MAAAA,SAAS,GAAG,KAAZ;AACH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,SAAS,IACN,oBAAC,UAAD;AACI,MAAA,IAAI,EAAEf,WADV;AAEI,MAAA,OAAO,EAAEM,OAFb;AAGI,MAAA,OAAO,EAAEC,SAHb;AAII,MAAA,eAAe,EAAE,EAJrB;AAKI,MAAA,mBAAmB,EAAE,IALzB;AAMI,MAAA,OAAO,EAAE,CANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CADJ;AAcH;;AAzH6B;;AA4HlC,eAAepB,UAAf","sourcesContent":["import React,{Component} from 'react'\r\nimport ReactTable from 'react-table'\r\nimport api from './api'\r\nimport axios from 'axios'\r\nimport socketIOClient from 'socket.io-client'\r\nvar api1 = axios.create({\r\n    baseURL:\"http://localhost:3001/api\"\r\n})\r\nclass samplelist extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            travel_list:[],\r\n            columns:[],\r\n            isloading:false,\r\n        }\r\n    }\r\n    \r\n    /*componentDidMount=  ()=>{\r\n        console.log(\"Data\")\r\n        console.log(api1.get('/flight'))\r\n    }*/\r\n    /*componentDidMount = async() =>{\r\n        let apiRes = null;\r\n        try{\r\n            apiRes = await axios.get('http://localhost:3001/api/flight')\r\n            console.log(apiRes)\r\n        }\r\n        catch(err){\r\n            console.log(err.response)\r\n        }\r\n    }*/\r\n    componentDidMount = ()=>{\r\n        axios({\r\n            method:\"get\",\r\n            url:\"http://localhost:3001/api/flight\",\r\n            withCredentials:true,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\"\r\n            }\r\n        })\r\n        .then(response=>{\r\n            if(response && response.data){\r\n                this.setState({travel_list:response.data})\r\n            }\r\n        })\r\n        .catch(error=>console.log(error.response.data))\r\n    }\r\n    /*componentDidMount = async() =>{\r\n        fetch(\"http://localhost:3001/api/flight\")\r\n        .then(response=>response.json())\r\n        .then(json=>{\r\n            console.log(\"Data\")\r\n            console.log(json)\r\n        })\r\n        this.setState({isloading:true})\r\n      */  \r\n\r\n        /*await api.getflight().then(flights=>{\r\n            this.setState({\r\n                travel_list:flights.data.data,\r\n                isloading:false,\r\n            })\r\n        })\r\n    }*/\r\n    /*componentDidMount = ()=>{\r\n        const{endpoint} = this.state\r\n        const socket = socketIOClient(endpoint)\r\n        socket.on(\"FromAPI\", data => this.setState({ response: data }));\r\n    }\r\n    getflights = () =>{\r\n        axios.get(\"http://localhost:3001/api/flight\")\r\n        .then((response)=>{\r\n          const data = response.data;\r\n          this.setState({posts:data});\r\n    \r\n          console.log(\"Data received\");\r\n        })\r\n        .catch(()=>{\r\n          alert(\"error retrieving data\");\r\n        })\r\n    */\r\n      \r\n    render(){\r\n        const{travel_list,isloading} = this.state\r\n        const columns = [\r\n            {\r\n                Header: 'ID',\r\n                accessor: '_id',\r\n                filterable: true,\r\n            },\r\n            {\r\n                Header: 'Source',\r\n                accessor: 'sr',\r\n                filterable: true,\r\n            },\r\n            {\r\n                Header: 'Dest',\r\n                accessor: 'dt',\r\n                filterable: true,\r\n            },\r\n            {\r\n                Header: 'Travel-Time',\r\n                accessor: 'time',\r\n                Cell: props => <span>{props.value.join(' / ')}</span>,\r\n            },\r\n        ]\r\n\r\n        let showTable = true\r\n        if (!travel_list.length) {\r\n            showTable = false\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {showTable && (\r\n                    <ReactTable\r\n                        data={travel_list}\r\n                        columns={columns}\r\n                        loading={isloading}\r\n                        defaultPageSize={10}\r\n                        showPageSizeOptions={true}\r\n                        minRows={0}\r\n                    />\r\n                )}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default samplelist"]},"metadata":{},"sourceType":"module"}